# This workflow builds your Jekyll site and deploys it to a GitHub Pages
# environment for Pull Request previews. This allows reviewers to see
# live changes before merging.

name: Jekyll Build and PR Preview

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events.
  # This workflow will run whenever a pull request is opened,
  # synchronized (new commits pushed), or reopened.
  pull_request:
    branches:
      - main # Specify the branch your PRs are typically merged into (e.g., main, master)
  # Allows you to run this workflow manually from the Actions tab in GitHub.
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'Pull Request Number (optional, for manual re-runs)'
        required: false
        type: number

# Define a single job named 'build'
jobs:
  build:
    # Specifies the runner environment for this job.
    # 'ubuntu-latest' provides a fresh Ubuntu VM for each run.
    runs-on: ubuntu-latest

    # Permissions required for this workflow.
    # - contents: read: Allows checking out code.
    # - pages: write: Allows deploying to GitHub Pages (essential for the preview).
    # - id-token: write: Required for OIDC authentication with GitHub Pages.
    permissions:
      contents: read
      pages: write
      id-token: write

    # Defines the deployment environment for GitHub Pages.
    # The 'url' output will contain the URL of the deployed preview page.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Steps in this job
    steps:
      - name: Determine PR Ref (for manual runs)
        id: pr_ref
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.pull_request_number
        run: |
          PR_NUMBER=${{ github.event.inputs.pull_request_number }}
          PR_REF="refs/pull/${PR_NUMBER}/merge"
          echo "Determined PR Ref: $PR_REF"
          echo "PR_REF=$PR_REF" >> $GITHUB_OUTPUT

      - name: Checkout code
        # Uses the official GitHub action to check out your repository code.
        uses: actions/checkout@v4
        with:
          # For workflow_dispatch, checkout the merge commit of the specified PR
          ref: ${{ github.event.inputs.pull_request_number && steps.pr_ref.outputs.PR_REF || github.ref }}

      - name: Setup Ruby
        # Uses a GitHub action to set up the Ruby environment.
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2' # IMPORTANT: Ensure this matches the Ruby version you use locally or prefer.
                                # Check your Gemfile or local rbenv/rvm setup.
          bundler-cache: true # Caches installed gems for faster subsequent builds.

      - name: Install Jekyll dependencies
        # Installs the gems specified in your Gemfile.
        # This step is redundant if bundler-cache is true, but good for clarity.
        run: bundle install

      - name: Build Jekyll site
        # Executes the Jekyll build command.
        # '--trace' provides more detailed error messages if the build fails.
        run: bundle exec jekyll build --trace

      - name: Setup Pages
        # Configures the GitHub Pages environment for deployment.
        # This action is part of the official GitHub Pages deployment flow.
        uses: actions/configure-pages@v3

      - name: Upload artifact
        # Uploads the '_site' directory (your built Jekyll site) as an artifact.
        # This artifact will then be used by the deploy-pages action.
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site' # The directory where Jekyll builds your site

      - name: Deploy to GitHub Pages
        # Deploys the uploaded artifact to GitHub Pages.
        # The 'id' allows us to reference its outputs, like the page_url.
        id: deployment
        uses: actions/deploy-pages@v4
